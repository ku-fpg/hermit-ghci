import HERMIT.API
script :: Shell ()
script = do
  eval "{rhs-of 'mean ; lam-body"
  eval "  { arg 2 ; let-intro 's }"
  eval "  { arg 3 ; let-intro 'l }"
  eval "  innermost let-float"
  eval "  try (reorder-lets ['s,'l])"
  eval "  let-tuple 'sl"
  eval "  { case-expr ; abstract 'xs ; app-fun ; let-intro 'sumlength }"
  eval "}"
  eval "innermost let-float"
  eval "binding-group-of 'sumlength"
  eval "nonrec-to-rec           -- since we intend sumlength to be a recursive function"
  eval "binding-of 'sumlength"
  eval "remember sumlen"
  eval "{ [def-rhs, lam-body]"
  eval "  case-split-inline 'xs"
  eval "  any-call (unfold 'sum)"
  eval "  any-call (unfold 'length)"
  eval "  simplify"
  eval "  case-alt 1"
  eval "  alpha-alt ['y,'ys]"
  eval "  alt-rhs"
  eval "  { arg 3 ; arg 3 ; let-intro 'l }"
  eval "  { arg 2 ; arg 3 ; let-intro 's }"
  eval "  innermost let-float"
  eval "  try (reorder-lets ['s,'l])"
  eval "  let-tuple 'sl"
  eval "  { case-expr ; fold-remembered sumlen }"
  eval "}"

